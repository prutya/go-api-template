x-shared-configuration:

  dbmate: &dbmate
    image: docker.io/amacneil/dbmate:2.28.0
    volumes:
      - "./db:/db"

  postgres: &postgres
    image: docker.io/postgres:17.6-alpine3.22
    environment:
      POSTGRES_USER: app_username
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: app_database

  redis: &redis
    image: docker.io/redis:8.2.0-alpine3.22
    environment:
      REDIS_PASSWORD: app_redis_password

services:
  dbmate:
    <<: [*dbmate]
    environment:
      DATABASE_URL: postgres://app_username:app_password@postgres:5432/app_database?sslmode=disable
    networks:
      - app_dev
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    <<: [*postgres]
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  psql:
    <<: [*postgres]
    volumes:
      - "./db:/db"
    entrypoint: ["psql", "postgres://app_username:app_password@postgres:5432/app_database?sslmode=disable"]
    networks:
      - app_dev
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    <<: [*redis]
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - app_dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
      start_interval: 1s

  redis_cli:
    <<: [*redis]
    entrypoint: ["redis-cli", "-h", "redis", "-p", "6379", "-a", "app_redis_password"]
    networks:
      - app_dev
    depends_on:
      redis:
        condition: service_healthy

  lint:
    image: docker.io/golangci/golangci-lint:v2.4.0-alpine
    volumes:
      - .:/app
    working_dir: /app
    command: ["golangci-lint", "run", "--verbose"]

  asynqmon:
    image: docker.io/hibiken/asynqmon:0.7.2
    platform: linux/amd64
    ports:
      - 8080:8080
    environment:
      REDIS_ADDR: redis:6379
      REDIS_PASSWORD: app_redis_password
    networks:
      - app_dev
    depends_on:
      redis:
        condition: service_healthy

  test:
    build:
      target: test
      context: "."
    environment:
      APP_DATABASE_URL: postgres://app_username:app_password@postgres_test:5432/app_database?sslmode=disable
    volumes:
      - .:/app
    command: ["ginkgo", "-v", "-r", "./..."]
    networks:
      - app_test
    depends_on:
      dbmate_test_migrate:
        condition: service_completed_successfully

  dbmate_test_migrate:
    <<: [*dbmate]
    environment:
      DATABASE_URL: postgres://app_username:app_password@postgres_test:5432/app_database?sslmode=disable
    command: ["--no-dump-schema", "migrate"]
    networks:
      - app_test
    depends_on:
      postgres_test:
        condition: service_healthy

  postgres_test:
    <<: [*postgres]
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - app_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_database"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: {}
  postgres_test_data:
    driver_opts:
      type: tmpfs
      device: tmpfs
  redis_data: {}

networks:
  app_dev: {}
  app_test: {}
